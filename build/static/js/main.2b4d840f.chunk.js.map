{"version":3,"sources":["redux/auth/auth-operations.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contactsActions.js.js","redux/contacts/contactsTypes.js","redux/contacts/contactsReducer.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","img/avatar2.png","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/Routes/PublicRoute.jsx","components/Routes/PrivateRoute.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","response","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","get","operations","module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","createReducer","payload","filter","id","isLoading","error","combineReducers","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","extraReducers","authOperations","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getLogIn","getUserName","getIsFetchingCurrentUser","Navigation","useSelector","nav","to","exact","link","activeClassName","activeLink","UserMenu","authSelectors","dispatch","useDispatch","src","defaultAvatar","alt","width","avatar","Button","color","variant","type","onClick","AuthNav","Appbar","header","PublicRoute","restricted","redirectTo","routeProps","shouldRedirect","PrivateRoute","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2b4d840f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    //заголовок на все запросы авторизации\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`; //носитель\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default operations;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__270DS\",\"link\":\"Navigation_link__1gOvq\",\"activeLink\":\"Navigation_activeLink__Mp-Pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2UIJS\",\"activeLink\":\"AuthNav_activeLink__1ZFgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3dYTf\",\"avatar\":\"UserMenu_avatar__1y2Bt\",\"name\":\"UserMenu_name__35h4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2jFI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__37-8C\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport {\r\n  FETCH_CONTACTS_REQUEST,\r\n  FETCH_CONTACTS_SUCCESS,\r\n  FETCH_CONTACTS_ERROR,\r\n  ADD_CONTACT_REQUEST,\r\n  ADD_CONTACT_SUCCESS,\r\n  ADD_CONTACT_ERROR,\r\n  DELETE_CONTACT_REQUEST,\r\n  DELETE_CONTACT_SUCCESS,\r\n  DELETE_CONTACT_ERROR,\r\n  FILTER_CONTACT,\r\n} from './contactsTypes';\r\n\r\n//синхронные\r\nexport const fetchContactsRequest = createAction(FETCH_CONTACTS_REQUEST);\r\nexport const fetchContactsSuccess = createAction(FETCH_CONTACTS_SUCCESS);\r\nexport const fetchContactsError = createAction(FETCH_CONTACTS_ERROR);\r\n\r\nexport const addContactRequest = createAction(ADD_CONTACT_REQUEST);\r\nexport const addContactSuccess = createAction(ADD_CONTACT_SUCCESS);\r\nexport const addContactError = createAction(ADD_CONTACT_ERROR);\r\n\r\nexport const deleteContactRequest = createAction(DELETE_CONTACT_REQUEST);\r\nexport const deleteContactSuccess = createAction(DELETE_CONTACT_SUCCESS);\r\nexport const deleteContactError = createAction(DELETE_CONTACT_ERROR);\r\n\r\nexport const filterContact = createAction(FILTER_CONTACT);\r\n","export const FETCH_CONTACTS_REQUEST = 'contacts/fetchContactsRequest';\r\nexport const FETCH_CONTACTS_SUCCESS = 'contacts/fetchContactsSuccess';\r\nexport const FETCH_CONTACTS_ERROR = 'contacts/fetchContactsError';\r\n\r\nexport const ADD_CONTACT_REQUEST = 'contacts/addContactRequest';\r\nexport const ADD_CONTACT_SUCCESS = 'contacts/addContactSuccess';\r\nexport const ADD_CONTACT_ERROR = 'contacts/addContactError';\r\n\r\nexport const DELETE_CONTACT_REQUEST = 'contacts/deleteContactRequest';\r\nexport const DELETE_CONTACT_SUCCESS = 'contacts/deleteContactSuccess';\r\nexport const DELETE_CONTACT_ERROR = 'contacts/deleteContactError';\r\n\r\nexport const FILTER_CONTACT = 'contacts/filter';\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './contactsActions.js';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","export const getLogIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getUserName = state => state.auth.user.name;\r\n\r\nexport const getIsFetchingCurrentUser = state =>\r\n  state.auth.isFetchingCurrentUser;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getLogIn } from \"../../redux/auth/auth-selectors\"\r\nimport s from \"./Navigation.module.css\";\r\n\r\nfunction Navigation() {\r\n    const isLoggedIn = useSelector(getLogIn);\r\n    \r\n    return (\r\n        <header className={s.nav}>\r\n            <div>\r\n            <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}> \r\n                Home\r\n            </NavLink>\r\n       \r\n            {isLoggedIn && (\r\n                <NavLink to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>\r\n                    Contacts\r\n                </NavLink>\r\n            )}\r\n            </div>\r\n         </header>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","export default __webpack_public_path__ + \"static/media/avatar2.18e04990.png\";","import { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n// import { getUserName } from \"redux/auth/auth-selectors\";\r\n// import authOperations from \"../../redux/auth/auth-operations\";\r\nimport Button from '@material-ui/core/Button';\r\nimport defaultAvatar from '../../img/avatar2.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  // const name = useSelector(getUserName);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img\r\n        src={defaultAvatar}\r\n        alt=\"Default Avatar\"\r\n        width=\"32\"\r\n        className={s.avatar}\r\n      />\r\n      <span className={s.name}>Welcome, {name}</span>\r\n\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    \r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation'\r\nimport UserMenu  from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport s from './AppBar.module.css';\r\nimport { getLogIn } from \"../../redux/auth/auth-selectors\";\r\n\r\nexport default function Appbar() {\r\n  const isLoggedIn = useSelector(getLogIn);\r\n  \r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu  /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getLogIn } from \"../../redux/auth/auth-selectors\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({ children, restricted = false,  redirectTo = \"/\", ...routeProps }) {\r\n  const isLoggedIn = useSelector(getLogIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","import { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getLogIn } from \"../../redux/auth/auth-selectors\";\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({ children, redirectTo = \"/\", ...routeProps }) {\r\n    const isLoggedIn = useSelector(getLogIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    )\r\n}\r\n\r\n\r\n","import Container from './components/Container/Container';\r\nimport Appbar from 'components/AppBar/AppBar';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useEffect, lazy, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport { getIsFetchingCurrentUser } from './redux/auth/auth-selectors';\r\n\r\nimport PublicRoute from './components/Routes/PublicRoute';\r\nimport PrivateRoute from './components/Routes/PrivateRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView/ContactsView'));\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {isFetchingCurrentUser ? (\r\n        <h1>Loading..</h1>\r\n      ) : (\r\n        <>\r\n          <Appbar />\r\n          <Switch>\r\n            <Suspense fallback={<p>Loading...</p>}>\r\n              <PublicRoute path=\"/\" exact>\r\n                <HomeView />\r\n              </PublicRoute>\r\n\r\n              <PublicRoute path=\"/register\" redirectTo=\"/contacts\" restricted>\r\n                <RegisterView />\r\n              </PublicRoute>\r\n\r\n              <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n                <LoginView />\r\n              </PublicRoute>\r\n\r\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                <ContactsView />\r\n              </PrivateRoute>\r\n            </Suspense>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}