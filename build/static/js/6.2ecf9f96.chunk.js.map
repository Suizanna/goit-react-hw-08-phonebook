{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/nanoid/index.browser.js","../node_modules/react-number-format/dist/react-number-format.es.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","noop","charIsNumber","char","match","isNil","val","escapeRegExp","str","replace","splitDecimal","numStr","allowNegative","hasNagation","addNegation","parts","split","beforeDecimal","afterDecimal","limitToScale","scale","fixedDecimalScale","filler","repeat","count","join","setCaretPosition","el","caretPos","createTextRange","range","move","select","selectionStart","focus","setSelectionRange","clamp","num","min","max","Math","getCurrentCaretPosition","selectionEnd","defaultProps","displayType","decimalSeparator","thousandsGroupStyle","prefix","suffix","allowEmptyFormatting","allowLeadingZeros","isNumericString","type","onValueChange","onChange","onKeyDown","onMouseUp","onFocus","onBlur","isAllowed","NumberFormat","superclass","props","call","this","defaultValue","validateProps","formattedValue","formatValueProp","state","numAsString","removeFormatting","mounted","selectionBeforeInput","bind","__proto__","prototype","create","constructor","componentDidMount","setState","componentDidUpdate","prevProps","updateValueIfRequired","componentWillUnmount","clearTimeout","focusTimeout","caretPositionTimeout","ref","focusedElm","stateValue","lastNumStr","lastValueWithNewFormat","formatNumString","floatValue","parseFloat","lastFloatValue","isNaN","updateValue","input","getFloatString","decimalScale","getSeparators","numRegex","getNumberRegex","hasNegation","firstDecimalIndex","indexOf","substring","RegExp","g","ignoreDecimalSeparator","format","customNumerals","ref$1","thousandSeparator","allowedDecimalSeparators","getMaskAtIndex","index","mask","getValueObject","Error","setPatchedCaretPosition","currentValue","setTimeout","correctCaretPosition","direction","firstHashPosition","lastIndexOf","nextPos","caretLeftBound","caretRightBound","getCaretPosition","inputValue","j","inputNumber","formattedNumber","currentInputChar","currentFormatChar","removePrefixAndSuffix","isNegative","suffixLastIndex","removePatternFormatting","formatArray","filter","start","ln","part","formatWithPattern","hashCount","formattedNumberAry","formatAsNumber","hasDecimalSeparator","ref$2","thousandsGroupRegex","getThousandsGroupRegex","search","applyThousandSeparator","customNumeralRegex","digit","isNonNumericFalsy","sign","coefficient","exponent","Number","decimalIndex","coffiecientLn","abs","toNumericString","shoudHaveDecimalSeparator","roundedDecimalParts","toFixed","reverse","reduce","roundedStr","current","idx","roundToPrecision","formatInput","formatNegation","negationRegex","doubleNegationRegex","test","removeNegation","isCharacterAFormat","correctInputValue","lastValue","this$1","ref$3","prevValue","newValue","prevLength","newLength","end","findChangedIndex","separator","substr","leftBound","rightBound","deletedValues","concat","find","deletedVal","deletedValuePortion","recordIndexOfFormatCharacters","resolvedPortion","forEach","currentPortion","keys","splice","numericString","ref$4","isBeforeDecimalPoint","params","currentCaretPosition","e","target","isChangeAllowed","fixLeadingZero","expectedCaretPosition","key","negativeRegex","isPatternFormat","newCaretPosition","preventDefault","isUnitTestRun","caretPosition","persist","render","customInput","renderText","getInputRef","otherProps","obj","exclude","k","hasOwnProperty","objectWithoutProperties","inputMode","navigator","platform","addInputMode","inputProps","assign","React","createElement","CustomInput","Component","isNum","v","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","node","duration","height","style","requestAnimationFrame","collapseToast","useLayoutEffect","onEnter","useEffect","onExited","onExit","eventManager","list","emitQueue","on","set","event","off","cb","get","cancelEmit","timers","emit","args","timer","callback","useKeeper","arg","refresh","reducer","action","useToastContainer","forceUpdate","useReducer","x","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","appendToast","toastContent","toastProps","staleId","delay","options","updateId","isNotValid","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","closeButton","rtl","transition","className","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","removeFromCollection","cloneElement","getToastToRender","toastToRender","toastList","p","getX","getY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","document","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","classNames","animationEvent","Toast","Transition","cssClasses","isProgressControlled","renderCloseButton","Bounce","ToastContainer","containerStyle","pointerEvents","getClassName","newestOnTop","containers","lazy","generateToastId","getToastId","dispatchToast","containerDomNode","mergeOptions","createToastByType","container","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item"],"mappings":"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","file":"static/js/6.2ecf9f96.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","/**\n * react-number-format - 4.7.3\n * Author : Sudhanshu Yadav\n * Copyright (c) 2016, 2021 to Sudhanshu Yadav, released under the MIT license.\n * https://github.com/s-yadav/react-number-format\n */\n\nimport React from 'react';\n\n//     \n\n                                                               \n\n// basic noop function\nfunction noop() {}\nfunction returnTrue() {\n  return true;\n}\n\nfunction charIsNumber(char         ) {\n  return !!(char || '').match(/\\d/);\n}\n\nfunction isNil(val     ) {\n  return val === null || val === undefined;\n}\n\nfunction escapeRegExp(str        ) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\nfunction getThousandsGroupRegex(thousandsGroupStyle        ) {\n  switch (thousandsGroupStyle) {\n    case 'lakh':\n      return /(\\d+?)(?=(\\d\\d)+(\\d)(?!\\d))(\\.\\d+)?/g;\n    case 'wan':\n      return /(\\d)(?=(\\d{4})+(?!\\d))/g;\n    case 'thousand':\n    default:\n      return /(\\d)(?=(\\d{3})+(?!\\d))/g;\n  }\n}\n\nfunction applyThousandSeparator(\n  str        ,\n  thousandSeparator        ,\n  thousandsGroupStyle        \n) {\n  var thousandsGroupRegex = getThousandsGroupRegex(thousandsGroupStyle);\n  var index = str.search(/[1-9]/);\n  index = index === -1 ? str.length : index;\n  return (\n    str.substring(0, index) +\n    str.substring(index, str.length).replace(thousandsGroupRegex, '$1' + thousandSeparator)\n  );\n}\n\n//spilt a float number into different parts beforeDecimal, afterDecimal, and negation\nfunction splitDecimal(numStr        , allowNegative) {\n  if ( allowNegative === void 0 ) allowNegative          = true;\n\n  var hasNagation = numStr[0] === '-';\n  var addNegation = hasNagation && allowNegative;\n  numStr = numStr.replace('-', '');\n\n  var parts = numStr.split('.');\n  var beforeDecimal = parts[0];\n  var afterDecimal = parts[1] || '';\n\n  return {\n    beforeDecimal: beforeDecimal,\n    afterDecimal: afterDecimal,\n    hasNagation: hasNagation,\n    addNegation: addNegation,\n  };\n}\n\nfunction fixLeadingZero(numStr         ) {\n  if (!numStr) { return numStr; }\n  var isNegative = numStr[0] === '-';\n  if (isNegative) { numStr = numStr.substring(1, numStr.length); }\n  var parts = numStr.split('.');\n  var beforeDecimal = parts[0].replace(/^0+/, '') || '0';\n  var afterDecimal = parts[1] || '';\n\n  return (\"\" + (isNegative ? '-' : '') + beforeDecimal + (afterDecimal ? (\".\" + afterDecimal) : ''));\n}\n\n/**\n * limit decimal numbers to given scale\n * Not used .fixedTo because that will break with big numbers\n */\nfunction limitToScale(numStr        , scale        , fixedDecimalScale         ) {\n  var str = '';\n  var filler = fixedDecimalScale ? '0' : '';\n  for (var i = 0; i <= scale - 1; i++) {\n    str += numStr[i] || filler;\n  }\n  return str;\n}\n\nfunction repeat(str, count) {\n  return Array(count + 1).join(str);\n}\n\nfunction toNumericString(num) {\n  num += ''; // typecast number to string\n\n  // store the sign and remove it from the number.\n  var sign = num[0] === '-' ? '-' : '';\n  if (sign) { num = num.substring(1); }\n\n  // split the number into cofficient and exponent\n  var ref = num.split(/[eE]/g);\n  var coefficient = ref[0];\n  var exponent = ref[1];\n\n  // covert exponent to number;\n  exponent = Number(exponent);\n\n  // if there is no exponent part or its 0, return the coffiecient with sign\n  if (!exponent) { return sign + coefficient; }\n\n  coefficient = coefficient.replace('.', '');\n\n  /**\n   * for scientific notation the current decimal index will be after first number (index 0)\n   * So effective decimal index will always be 1 + exponent value\n   */\n  var decimalIndex = 1 + exponent;\n\n  var coffiecientLn = coefficient.length;\n\n  if (decimalIndex < 0) {\n    // if decimal index is less then 0 add preceding 0s\n    // add 1 as join will have\n    coefficient = '0.' + repeat('0', Math.abs(decimalIndex)) + coefficient;\n  } else if (decimalIndex >= coffiecientLn) {\n    // if decimal index is less then 0 add leading 0s\n    coefficient = coefficient + repeat('0', decimalIndex - coffiecientLn);\n  } else {\n    // else add decimal point at proper index\n    coefficient =\n      (coefficient.substring(0, decimalIndex) || '0') + '.' + coefficient.substring(decimalIndex);\n  }\n\n  return sign + coefficient;\n}\n\n/**\n * This method is required to round prop value to given scale.\n * Not used .round or .fixedTo because that will break with big numbers\n */\nfunction roundToPrecision(numStr        , scale        , fixedDecimalScale         ) {\n  //if number is empty don't do anything return empty string\n  if (['', '-'].indexOf(numStr) !== -1) { return numStr; }\n\n  var shoudHaveDecimalSeparator = numStr.indexOf('.') !== -1 && scale;\n  var ref = splitDecimal(numStr);\n  var beforeDecimal = ref.beforeDecimal;\n  var afterDecimal = ref.afterDecimal;\n  var hasNagation = ref.hasNagation;\n  var floatValue = parseFloat((\"0.\" + (afterDecimal || '0')));\n  var floatValueStr =\n    afterDecimal.length <= scale ? (\"0.\" + afterDecimal) : floatValue.toFixed(scale);\n  var roundedDecimalParts = floatValueStr.split('.');\n  var intPart = beforeDecimal\n    .split('')\n    .reverse()\n    .reduce(function (roundedStr, current, idx) {\n      if (roundedStr.length > idx) {\n        return (\n          (Number(roundedStr[0]) + Number(current)).toString() +\n          roundedStr.substring(1, roundedStr.length)\n        );\n      }\n      return current + roundedStr;\n    }, roundedDecimalParts[0]);\n\n  var decimalPart = limitToScale(\n    roundedDecimalParts[1] || '',\n    Math.min(scale, afterDecimal.length),\n    fixedDecimalScale\n  );\n  var negation = hasNagation ? '-' : '';\n  var decimalSeparator = shoudHaveDecimalSeparator ? '.' : '';\n  return (\"\" + negation + intPart + decimalSeparator + decimalPart);\n}\n\n/** set the caret positon in an input field **/\nfunction setCaretPosition(el                  , caretPos        ) {\n  el.value = el.value;\n  // ^ this is used to not only get 'focus', but\n  // to make sure we don't have it everything -selected-\n  // (it causes an issue in chrome, and having it doesn't hurt any other browser)\n  if (el !== null) {\n    if (el.createTextRange) {\n      var range = el.createTextRange();\n      range.move('character', caretPos);\n      range.select();\n      return true;\n    }\n    // (el.selectionStart === 0 added for Firefox bug)\n    if (el.selectionStart || el.selectionStart === 0) {\n      el.focus();\n      el.setSelectionRange(caretPos, caretPos);\n      return true;\n    }\n\n    // fail city, fortunately this never happens (as far as I've tested) :)\n    el.focus();\n    return false;\n  }\n}\n\n/**\n  Given previous value and newValue it returns the index\n  start - end to which values have changed.\n  This function makes assumption about only consecutive\n  characters are changed which is correct assumption for caret input.\n*/\nfunction findChangedIndex(prevValue        , newValue        ) {\n  var i = 0,\n    j = 0;\n  var prevLength = prevValue.length;\n  var newLength = newValue.length;\n  while (prevValue[i] === newValue[i] && i < prevLength) { i++; }\n\n  //check what has been changed from last\n  while (\n    prevValue[prevLength - 1 - j] === newValue[newLength - 1 - j] &&\n    newLength - j > i &&\n    prevLength - j > i\n  ) {\n    j++;\n  }\n\n  return { start: i, end: prevLength - j };\n}\n\n/*\n  Returns a number whose value is limited to the given range\n*/\nfunction clamp(num        , min        , max        ) {\n  return Math.min(Math.max(num, min), max);\n}\n\nfunction getCurrentCaretPosition(el                  ) {\n  /*Max of selectionStart and selectionEnd is taken for the patch of pixel and other mobile device caret bug*/\n  return Math.max(el.selectionStart, el.selectionEnd);\n}\n\nfunction addInputMode(format                                   ) {\n  return (\n    format ||\n    (typeof navigator !== 'undefined' &&\n      !(navigator.platform && /iPhone|iPod/.test(navigator.platform)))\n  );\n}\n\n//     \nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar defaultProps = {\n  displayType: 'input',\n  decimalSeparator: '.',\n  thousandsGroupStyle: 'thousand',\n  fixedDecimalScale: false,\n  prefix: '',\n  suffix: '',\n  allowNegative: true,\n  allowEmptyFormatting: false,\n  allowLeadingZeros: false,\n  isNumericString: false,\n  type: 'text',\n  onValueChange: noop,\n  onChange: noop,\n  onKeyDown: noop,\n  onMouseUp: noop,\n  onFocus: noop,\n  onBlur: noop,\n  isAllowed: returnTrue,\n};\nvar NumberFormat = /*@__PURE__*/(function (superclass) {\n  function NumberFormat(props        ) {\n    superclass.call(this, props);\n    var defaultValue = props.defaultValue;\n\n    //validate props\n    this.validateProps();\n\n    var formattedValue = this.formatValueProp(defaultValue);\n\n    this.state = {\n      value: formattedValue,\n      numAsString: this.removeFormatting(formattedValue),\n      mounted: false,\n    };\n\n    this.selectionBeforeInput = {\n      selectionStart: 0,\n      selectionEnd: 0,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  if ( superclass ) NumberFormat.__proto__ = superclass;\n  NumberFormat.prototype = Object.create( superclass && superclass.prototype );\n  NumberFormat.prototype.constructor = NumberFormat;\n\n  NumberFormat.prototype.componentDidMount = function componentDidMount () {\n    // set mounted state\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({\n      mounted: true,\n    });\n  };\n\n  NumberFormat.prototype.componentDidUpdate = function componentDidUpdate (prevProps        ) {\n    this.updateValueIfRequired(prevProps);\n  };\n\n  NumberFormat.prototype.componentWillUnmount = function componentWillUnmount () {\n    clearTimeout(this.focusTimeout);\n    clearTimeout(this.caretPositionTimeout);\n  };\n\n  NumberFormat.prototype.updateValueIfRequired = function updateValueIfRequired (prevProps        ) {\n    var ref = this;\n    var props = ref.props;\n    var state = ref.state;\n    var focusedElm = ref.focusedElm;\n    var stateValue = state.value;\n    var lastNumStr = state.numAsString; if ( lastNumStr === void 0 ) lastNumStr = '';\n\n    // If only state changed no need to do any thing\n    if (prevProps !== props) {\n      //validate props\n      this.validateProps();\n\n      var lastValueWithNewFormat = this.formatNumString(lastNumStr);\n\n      var formattedValue = isNil(props.value) ? lastValueWithNewFormat : this.formatValueProp();\n      var numAsString = this.removeFormatting(formattedValue);\n\n      var floatValue = parseFloat(numAsString);\n      var lastFloatValue = parseFloat(lastNumStr);\n\n      if (\n        //while typing set state only when float value changes\n        ((!isNaN(floatValue) || !isNaN(lastFloatValue)) && floatValue !== lastFloatValue) ||\n        //can also set state when float value is same and the format props changes\n        lastValueWithNewFormat !== stateValue ||\n        //set state always when not in focus and formatted value is changed\n        (focusedElm === null && formattedValue !== stateValue)\n      ) {\n        this.updateValue({ formattedValue: formattedValue, numAsString: numAsString, input: focusedElm });\n      }\n    }\n  };\n\n  /** Misc methods **/\n  NumberFormat.prototype.getFloatString = function getFloatString (num) {\n    if ( num === void 0 ) num         = '';\n\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    var numRegex = this.getNumberRegex(true);\n\n    //remove negation for regex check\n    var hasNegation = num[0] === '-';\n    if (hasNegation) { num = num.replace('-', ''); }\n\n    //if decimal scale is zero remove decimal and number after decimalSeparator\n    if (decimalSeparator && decimalScale === 0) {\n      num = num.split(decimalSeparator)[0];\n    }\n\n    num = (num.match(numRegex) || []).join('').replace(decimalSeparator, '.');\n\n    //remove extra decimals\n    var firstDecimalIndex = num.indexOf('.');\n\n    if (firstDecimalIndex !== -1) {\n      num = (num.substring(0, firstDecimalIndex)) + \".\" + (num\n        .substring(firstDecimalIndex + 1, num.length)\n        .replace(new RegExp(escapeRegExp(decimalSeparator), 'g'), ''));\n    }\n\n    //add negation back\n    if (hasNegation) { num = '-' + num; }\n\n    return num;\n  };\n\n  //returned regex assumes decimalSeparator is as per prop\n  NumberFormat.prototype.getNumberRegex = function getNumberRegex (g         , ignoreDecimalSeparator          ) {\n    var ref = this.props;\n    var format = ref.format;\n    var decimalScale = ref.decimalScale;\n    var customNumerals = ref.customNumerals;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    return new RegExp(\n      '[0-9' +\n        (customNumerals ? customNumerals.join('') : '') +\n        ']' +\n        (decimalSeparator && decimalScale !== 0 && !ignoreDecimalSeparator && !format\n          ? '|' + escapeRegExp(decimalSeparator)\n          : ''),\n      g ? 'g' : undefined\n    );\n  };\n\n  NumberFormat.prototype.getSeparators = function getSeparators () {\n    var ref = this.props;\n    var decimalSeparator = ref.decimalSeparator;\n    var ref$1 = this.props;\n    var thousandSeparator = ref$1.thousandSeparator;\n    var allowedDecimalSeparators = ref$1.allowedDecimalSeparators;\n\n    if (thousandSeparator === true) {\n      thousandSeparator = ',';\n    }\n    if (!allowedDecimalSeparators) {\n      allowedDecimalSeparators = [decimalSeparator, '.'];\n    }\n\n    return {\n      decimalSeparator: decimalSeparator,\n      thousandSeparator: thousandSeparator,\n      allowedDecimalSeparators: allowedDecimalSeparators,\n    };\n  };\n\n  NumberFormat.prototype.getMaskAtIndex = function getMaskAtIndex (index        ) {\n    var ref = this.props;\n    var mask = ref.mask; if ( mask === void 0 ) mask = ' ';\n    if (typeof mask === 'string') {\n      return mask;\n    }\n\n    return mask[index] || ' ';\n  };\n\n  NumberFormat.prototype.getValueObject = function getValueObject (formattedValue        , numAsString        ) {\n    var floatValue = parseFloat(numAsString);\n\n    return {\n      formattedValue: formattedValue,\n      value: numAsString,\n      floatValue: isNaN(floatValue) ? undefined : floatValue,\n    };\n  };\n\n  NumberFormat.prototype.validateProps = function validateProps () {\n    var ref = this.props;\n    var mask = ref.mask;\n\n    //validate decimalSeparator and thousandSeparator\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    var thousandSeparator = ref$1.thousandSeparator;\n\n    if (decimalSeparator === thousandSeparator) {\n      throw new Error((\"\\n          Decimal separator can't be same as thousand separator.\\n          thousandSeparator: \" + thousandSeparator + \" (thousandSeparator = {true} is same as thousandSeparator = \\\",\\\")\\n          decimalSeparator: \" + decimalSeparator + \" (default value for decimalSeparator is .)\\n       \"));\n    }\n\n    //validate mask\n    if (mask) {\n      var maskAsStr = mask === 'string' ? mask : mask.toString();\n      if (maskAsStr.match(/\\d/g)) {\n        throw new Error((\"\\n          Mask \" + mask + \" should not contain numeric character;\\n        \"));\n      }\n    }\n  };\n  /** Misc methods end **/\n\n  /** caret specific methods **/\n  NumberFormat.prototype.setPatchedCaretPosition = function setPatchedCaretPosition (el                  , caretPos        , currentValue        ) {\n    /* setting caret position within timeout of 0ms is required for mobile chrome,\n    otherwise browser resets the caret position after we set it\n    We are also setting it without timeout so that in normal browser we don't see the flickering */\n    setCaretPosition(el, caretPos);\n    this.caretPositionTimeout = setTimeout(function () {\n      if (el.value === currentValue) { setCaretPosition(el, caretPos); }\n    }, 0);\n  };\n\n  /* This keeps the caret within typing area so people can't type in between prefix or suffix */\n  NumberFormat.prototype.correctCaretPosition = function correctCaretPosition (value        , caretPos        , direction         ) {\n    var ref = this.props;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var format = ref.format;\n\n    //if value is empty return 0\n    if (value === '') { return 0; }\n\n    //caret position should be between 0 and value length\n    caretPos = clamp(caretPos, 0, value.length);\n\n    //in case of format as number limit between prefix and suffix\n    if (!format) {\n      var hasNegation = value[0] === '-';\n      return clamp(caretPos, prefix.length + (hasNegation ? 1 : 0), value.length - suffix.length);\n    }\n\n    //in case if custom format method don't do anything\n    if (typeof format === 'function') { return caretPos; }\n\n    /* in case format is string find the closest # position from the caret position */\n\n    //in case the caretPos have input value on it don't do anything\n    if (format[caretPos] === '#' && charIsNumber(value[caretPos])) {\n      return caretPos;\n    }\n\n    //if caretPos is just after input value don't do anything\n    if (format[caretPos - 1] === '#' && charIsNumber(value[caretPos - 1])) {\n      return caretPos;\n    }\n\n    //find the nearest caret position\n    var firstHashPosition = format.indexOf('#');\n    var lastHashPosition = format.lastIndexOf('#');\n\n    //limit the cursor between the first # position and the last # position\n    caretPos = clamp(caretPos, firstHashPosition, lastHashPosition + 1);\n\n    var nextPos = format.substring(caretPos, format.length).indexOf('#');\n    var caretLeftBound = caretPos;\n    var caretRightBound = caretPos + (nextPos === -1 ? 0 : nextPos);\n\n    //get the position where the last number is present\n    while (\n      caretLeftBound > firstHashPosition &&\n      (format[caretLeftBound] !== '#' || !charIsNumber(value[caretLeftBound]))\n    ) {\n      caretLeftBound -= 1;\n    }\n\n    var goToLeft =\n      !charIsNumber(value[caretRightBound]) ||\n      (direction === 'left' && caretPos !== firstHashPosition) ||\n      caretPos - caretLeftBound < caretRightBound - caretPos;\n\n    if (goToLeft) {\n      //check if number should be taken after the bound or after it\n      //if number preceding a valid number keep it after\n      return charIsNumber(value[caretLeftBound]) ? caretLeftBound + 1 : caretLeftBound;\n    }\n\n    return caretRightBound;\n  };\n\n  NumberFormat.prototype.getCaretPosition = function getCaretPosition (inputValue        , formattedValue        , caretPos        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var stateValue = this.state.value;\n    var numRegex = this.getNumberRegex(true);\n    var inputNumber = (inputValue.match(numRegex) || []).join('');\n    var formattedNumber = (formattedValue.match(numRegex) || []).join('');\n    var j, i;\n\n    j = 0;\n\n    for (i = 0; i < caretPos; i++) {\n      var currentInputChar = inputValue[i] || '';\n      var currentFormatChar = formattedValue[j] || '';\n      //no need to increase new cursor position if formatted value does not have those characters\n      //case inputValue = 1a23 and formattedValue =  123\n      if (!currentInputChar.match(numRegex) && currentInputChar !== currentFormatChar) {\n        continue;\n      }\n\n      //When we are striping out leading zeros maintain the new cursor position\n      //Case inputValue = 00023 and formattedValue = 23;\n      if (\n        currentInputChar === '0' &&\n        currentFormatChar.match(numRegex) &&\n        currentFormatChar !== '0' &&\n        inputNumber.length !== formattedNumber.length\n      ) {\n        continue;\n      }\n\n      //we are not using currentFormatChar because j can change here\n      while (currentInputChar !== formattedValue[j] && j < formattedValue.length) {\n        j++;\n      }\n      j++;\n    }\n\n    if (typeof format === 'string' && !stateValue) {\n      //set it to the maximum value so it goes after the last number\n      j = formattedValue.length;\n    }\n\n    //correct caret position if its outside of editable area\n    j = this.correctCaretPosition(formattedValue, j);\n\n    return j;\n  };\n  /** caret specific methods ends **/\n\n  /** methods to remove formattting **/\n  NumberFormat.prototype.removePrefixAndSuffix = function removePrefixAndSuffix (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n\n    //remove prefix and suffix\n    if (!format && val) {\n      var isNegative = val[0] === '-';\n\n      //remove negation sign\n      if (isNegative) { val = val.substring(1, val.length); }\n\n      //remove prefix\n      val = prefix && val.indexOf(prefix) === 0 ? val.substring(prefix.length, val.length) : val;\n\n      //remove suffix\n      var suffixLastIndex = val.lastIndexOf(suffix);\n      val =\n        suffix && suffixLastIndex !== -1 && suffixLastIndex === val.length - suffix.length\n          ? val.substring(0, suffixLastIndex)\n          : val;\n\n      //add negation sign back\n      if (isNegative) { val = '-' + val; }\n    }\n\n    return val;\n  };\n\n  NumberFormat.prototype.removePatternFormatting = function removePatternFormatting (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var formatArray = format.split('#').filter(function (str) { return str !== ''; });\n    var start = 0;\n    var numStr = '';\n\n    for (var i = 0, ln = formatArray.length; i <= ln; i++) {\n      var part = formatArray[i] || '';\n\n      //if i is the last fragment take the index of end of the value\n      //For case like +1 (911) 911 91 91 having pattern +1 (###) ### ## ##\n      var index = i === ln ? val.length : val.indexOf(part, start);\n\n      /* in any case if we don't find the pattern part in the value assume the val as numeric string\n      This will be also in case if user has started typing, in any other case it will not be -1\n      unless wrong prop value is provided */\n      if (index === -1) {\n        numStr = val;\n        break;\n      } else {\n        numStr += val.substring(start, index);\n        start = index + part.length;\n      }\n    }\n\n    return (numStr.match(/\\d/g) || []).join('');\n  };\n\n  NumberFormat.prototype.removeFormatting = function removeFormatting (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var removeFormatting = ref.removeFormatting;\n    if (!val) { return val; }\n\n    if (!format) {\n      val = this.removePrefixAndSuffix(val);\n      val = this.getFloatString(val);\n    } else if (typeof format === 'string') {\n      val = this.removePatternFormatting(val);\n    } else if (typeof removeFormatting === 'function') {\n      //condition need to be handled if format method is provide,\n      val = removeFormatting(val);\n    } else {\n      val = (val.match(/\\d/g) || []).join('');\n    }\n    return val;\n  };\n  /** methods to remove formattting end **/\n\n  /*** format specific methods start ***/\n  /**\n   * Format when # based string is provided\n   * @param  {string} numStr Numeric String\n   * @return {string}        formatted Value\n   */\n  NumberFormat.prototype.formatWithPattern = function formatWithPattern (numStr        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var hashCount = 0;\n    var formattedNumberAry = format.split('');\n    for (var i = 0, ln = format.length; i < ln; i++) {\n      if (format[i] === '#') {\n        formattedNumberAry[i] = numStr[hashCount] || this.getMaskAtIndex(hashCount);\n        hashCount += 1;\n      }\n    }\n    return formattedNumberAry.join('');\n  };\n  /**\n   * @param  {string} numStr Numeric string/floatString] It always have decimalSeparator as .\n   * @return {string} formatted Value\n   */\n  NumberFormat.prototype.formatAsNumber = function formatAsNumber (numStr        ) {\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var allowNegative = ref.allowNegative;\n    var thousandsGroupStyle = ref.thousandsGroupStyle;\n    var ref$1 = this.getSeparators();\n    var thousandSeparator = ref$1.thousandSeparator;\n    var decimalSeparator = ref$1.decimalSeparator;\n\n    var hasDecimalSeparator = numStr.indexOf('.') !== -1 || (decimalScale && fixedDecimalScale);\n    var ref$2 = splitDecimal(numStr, allowNegative);\n    var beforeDecimal = ref$2.beforeDecimal;\n    var afterDecimal = ref$2.afterDecimal;\n    var addNegation = ref$2.addNegation; // eslint-disable-line prefer-const\n\n    //apply decimal precision if its defined\n    if (decimalScale !== undefined) {\n      afterDecimal = limitToScale(afterDecimal, decimalScale, fixedDecimalScale);\n    }\n\n    if (thousandSeparator) {\n      beforeDecimal = applyThousandSeparator(beforeDecimal, thousandSeparator, thousandsGroupStyle);\n    }\n\n    //add prefix and suffix\n    if (prefix) { beforeDecimal = prefix + beforeDecimal; }\n    if (suffix) { afterDecimal = afterDecimal + suffix; }\n\n    //restore negation sign\n    if (addNegation) { beforeDecimal = '-' + beforeDecimal; }\n\n    numStr = beforeDecimal + ((hasDecimalSeparator && decimalSeparator) || '') + afterDecimal;\n\n    return numStr;\n  };\n\n  NumberFormat.prototype.formatNumString = function formatNumString (numStr) {\n    if ( numStr === void 0 ) numStr         = '';\n\n    var ref = this.props;\n    var format = ref.format;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var customNumerals = ref.customNumerals;\n    var formattedValue = numStr;\n\n    if (customNumerals && customNumerals.length === 10) {\n      var customNumeralRegex = new RegExp('[' + customNumerals.join('') + ']', 'g');\n      formattedValue = numStr.replace(customNumeralRegex, function (digit) { return customNumerals.indexOf(digit).toString(); }\n      );\n    }\n\n    if (numStr === '' && !allowEmptyFormatting) {\n      formattedValue = '';\n    } else if (numStr === '-' && !format) {\n      formattedValue = '-';\n    } else if (typeof format === 'string') {\n      formattedValue = this.formatWithPattern(formattedValue);\n    } else if (typeof format === 'function') {\n      formattedValue = format(formattedValue);\n    } else {\n      formattedValue = this.formatAsNumber(formattedValue);\n    }\n\n    return formattedValue;\n  };\n\n  NumberFormat.prototype.formatValueProp = function formatValueProp (defaultValue                 ) {\n    var ref = this.props;\n    var format = ref.format;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var ref$1 = this.props;\n    var value = ref$1.value;\n    var isNumericString = ref$1.isNumericString;\n\n    // if value is undefined or null, use defaultValue instead\n    value = isNil(value) ? defaultValue : value;\n\n    var isNonNumericFalsy = !value && value !== 0;\n\n    if (isNonNumericFalsy && allowEmptyFormatting) {\n      value = '';\n    }\n\n    // if value is not defined return empty string\n    if (isNonNumericFalsy && !allowEmptyFormatting) { return ''; }\n\n    if (typeof value === 'number') {\n      value = toNumericString(value);\n      isNumericString = true;\n    }\n\n    //change infinity value to empty string\n    if (value === 'Infinity' && isNumericString) {\n      value = '';\n    }\n\n    //round the number based on decimalScale\n    //format only if non formatted value is provided\n    if (isNumericString && !format && typeof decimalScale === 'number') {\n      value = roundToPrecision(value, decimalScale, fixedDecimalScale);\n    }\n\n    var formattedValue = isNumericString ? this.formatNumString(value) : this.formatInput(value);\n\n    return formattedValue;\n  };\n\n  NumberFormat.prototype.formatNegation = function formatNegation (value) {\n    if ( value === void 0 ) value         = '';\n\n    var ref = this.props;\n    var allowNegative = ref.allowNegative;\n    var negationRegex = new RegExp('(-)');\n    var doubleNegationRegex = new RegExp('(-)(.)*(-)');\n\n    // Check number has '-' value\n    var hasNegation = negationRegex.test(value);\n\n    // Check number has 2 or more '-' values\n    var removeNegation = doubleNegationRegex.test(value);\n\n    //remove negation\n    value = value.replace(/-/g, '');\n\n    if (hasNegation && !removeNegation && allowNegative) {\n      value = '-' + value;\n    }\n\n    return value;\n  };\n\n  NumberFormat.prototype.formatInput = function formatInput (value) {\n    if ( value === void 0 ) value         = '';\n\n    var ref = this.props;\n    var format = ref.format;\n\n    //format negation only if we are formatting as number\n    if (!format) {\n      value = this.removePrefixAndSuffix(value);\n      value = this.formatNegation(value);\n    }\n\n    //remove formatting from number\n    value = this.removeFormatting(value);\n\n    return this.formatNumString(value);\n  };\n\n  /*** format specific methods end ***/\n  NumberFormat.prototype.isCharacterAFormat = function isCharacterAFormat (caretPos        , value        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n\n    //check within format pattern\n    if (typeof format === 'string' && format[caretPos] !== '#') { return true; }\n\n    //check in number format\n    if (\n      !format &&\n      (caretPos < prefix.length ||\n        caretPos >= value.length - suffix.length ||\n        (decimalScale && fixedDecimalScale && value[caretPos] === decimalSeparator))\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * This will check if any formatting got removed by the delete or backspace and reset the value\n   * It will also work as fallback if android chome keyDown handler does not work\n   **/\n  NumberFormat.prototype.correctInputValue = function correctInputValue (caretPos        , lastValue        , value        ) {\n    var this$1 = this;\n\n    var ref = this.props;\n    var format = ref.format;\n    var allowNegative = ref.allowNegative;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var decimalScale = ref.decimalScale;\n    var ref$1 = this.getSeparators();\n    var allowedDecimalSeparators = ref$1.allowedDecimalSeparators;\n    var decimalSeparator = ref$1.decimalSeparator;\n    var lastNumStr = this.state.numAsString || '';\n    var ref$2 = this.selectionBeforeInput;\n    var selectionStart = ref$2.selectionStart;\n    var selectionEnd = ref$2.selectionEnd;\n    var ref$3 = findChangedIndex(lastValue, value);\n    var start = ref$3.start;\n    var end = ref$3.end;\n\n    /** Check for any allowed decimal separator is added in the numeric format and replace it with decimal separator */\n    if (\n      !format &&\n      start === end &&\n      allowedDecimalSeparators.indexOf(value[selectionStart]) !== -1\n    ) {\n      var separator = decimalScale === 0 ? '' : decimalSeparator;\n      return (\n        value.substr(0, selectionStart) + separator + value.substr(selectionStart + 1, value.length)\n      );\n    }\n\n    var leftBound = !!format ? 0 : prefix.length;\n    var rightBound = lastValue.length - (!!format ? 0 : suffix.length);\n\n    if (\n      // don't do anything if something got added\n      value.length > lastValue.length ||\n      // or if the new value is an empty string\n      !value.length ||\n      // or if nothing has changed, in which case start will be same as end\n      start === end ||\n      // or in case if whole input is selected and new value is typed\n      (selectionStart === 0 && selectionEnd === lastValue.length) ||\n      // or in case if the whole content is replaced by browser, example (autocomplete)\n      (start === 0 && end === lastValue.length) ||\n      // or if charcters between prefix and suffix is selected.\n      // For numeric inputs we apply the format so, prefix and suffix can be ignored\n      (selectionStart === leftBound && selectionEnd === rightBound)\n    ) {\n      return value;\n    }\n\n    // check whether the deleted portion has a character that is part of a format\n    var deletedValues = lastValue.substr(start, end - start);\n    var formatGotDeleted = !![].concat( deletedValues ).find(function (deletedVal, idx) { return this$1.isCharacterAFormat(idx + start, lastValue); }\n    );\n\n    // if it has, only remove characters that are not part of the format\n    if (formatGotDeleted) {\n      var deletedValuePortion = lastValue.substr(start);\n      var recordIndexOfFormatCharacters = {};\n      var resolvedPortion = [];\n      [].concat( deletedValuePortion ).forEach(function (currentPortion, idx) {\n        if (this$1.isCharacterAFormat(idx + start, lastValue)) {\n          recordIndexOfFormatCharacters[idx] = currentPortion;\n        } else if (idx > deletedValues.length - 1) {\n          resolvedPortion.push(currentPortion);\n        }\n      });\n\n      Object.keys(recordIndexOfFormatCharacters).forEach(function (idx) {\n        if (resolvedPortion.length > idx) {\n          resolvedPortion.splice(idx, 0, recordIndexOfFormatCharacters[idx]);\n        } else {\n          resolvedPortion.push(recordIndexOfFormatCharacters[idx]);\n        }\n      });\n\n      value = lastValue.substr(0, start) + resolvedPortion.join('');\n    }\n\n    //for numbers check if beforeDecimal got deleted and there is nothing after decimal,\n    //clear all numbers in such case while keeping the - sign\n    if (!format) {\n      var numericString = this.removeFormatting(value);\n      var ref$4 = splitDecimal(\n        numericString,\n        allowNegative\n      );\n      var beforeDecimal = ref$4.beforeDecimal;\n      var afterDecimal = ref$4.afterDecimal;\n      var addNegation = ref$4.addNegation; // eslint-disable-line prefer-const\n\n      //clear only if something got deleted\n      var isBeforeDecimalPoint = caretPos < value.indexOf(decimalSeparator) + 1;\n      if (\n        numericString.length < lastNumStr.length &&\n        isBeforeDecimalPoint &&\n        beforeDecimal === '' &&\n        !parseFloat(afterDecimal)\n      ) {\n        return addNegation ? '-' : '';\n      }\n    }\n\n    return value;\n  };\n\n  /** Update value and caret position */\n  NumberFormat.prototype.updateValue = function updateValue (params   \n                           \n                        \n                       \n                            \n                     \n                              \n   ) {\n    var formattedValue = params.formattedValue;\n    var input = params.input;\n    var setCaretPosition = params.setCaretPosition; if ( setCaretPosition === void 0 ) setCaretPosition = true;\n    var numAsString = params.numAsString;\n    var caretPos = params.caretPos;\n    var ref = this.props;\n    var onValueChange = ref.onValueChange;\n    var ref$1 = this.state;\n    var lastValue = ref$1.value;\n\n    if (input) {\n      //set caret position, and value imperatively when element is provided\n      if (setCaretPosition) {\n        //calculate caret position if not defined\n        if (!caretPos) {\n          var inputValue = params.inputValue || input.value;\n\n          var currentCaretPosition = getCurrentCaretPosition(input);\n\n          /**\n           * set the value imperatively, this is required for IE fix\n           * This is also required as if new caret position is beyond the previous value.\n           * Caret position will not be set correctly\n           */\n          input.value = formattedValue;\n\n          //get the caret position\n          caretPos = this.getCaretPosition(inputValue, formattedValue, currentCaretPosition);\n        }\n\n        //set caret position\n        this.setPatchedCaretPosition(input, caretPos, formattedValue);\n      } else {\n        /**\n         * if we are not setting caret position set the value imperatively.\n         * This is required on onBlur method\n         */\n        input.value = formattedValue;\n      }\n    }\n\n    //calculate numeric string if not passed\n    if (numAsString === undefined) {\n      numAsString = this.removeFormatting(formattedValue);\n    }\n\n    //update state if value is changed\n    if (formattedValue !== lastValue) {\n      this.setState({ value: formattedValue, numAsString: numAsString });\n\n      // trigger onValueChange synchronously, so parent is updated along with the number format. Fix for #277, #287\n      onValueChange(this.getValueObject(formattedValue, numAsString));\n    }\n  };\n\n  NumberFormat.prototype.onChange = function onChange (e                     ) {\n    var el = e.target;\n    var inputValue = el.value;\n    var ref = this;\n    var state = ref.state;\n    var props = ref.props;\n    var isAllowed = props.isAllowed;\n    var lastValue = state.value || '';\n\n    var currentCaretPosition = getCurrentCaretPosition(el);\n\n    inputValue = this.correctInputValue(currentCaretPosition, lastValue, inputValue);\n\n    var formattedValue = this.formatInput(inputValue) || '';\n    var numAsString = this.removeFormatting(formattedValue);\n\n    var valueObj = this.getValueObject(formattedValue, numAsString);\n    var isChangeAllowed = isAllowed(valueObj);\n\n    if (!isChangeAllowed) {\n      formattedValue = lastValue;\n    }\n\n    this.updateValue({ formattedValue: formattedValue, numAsString: numAsString, inputValue: inputValue, input: el });\n\n    if (isChangeAllowed) {\n      props.onChange(e);\n    }\n  };\n\n  NumberFormat.prototype.onBlur = function onBlur (e                     ) {\n    var ref = this;\n    var props = ref.props;\n    var state = ref.state;\n    var format = props.format;\n    var onBlur = props.onBlur;\n    var allowLeadingZeros = props.allowLeadingZeros;\n    var numAsString = state.numAsString;\n    var lastValue = state.value;\n    this.focusedElm = null;\n\n    clearTimeout(this.focusTimeout);\n    clearTimeout(this.caretPositionTimeout);\n\n    if (!format) {\n      // if the numAsString is not a valid number reset it to empty\n      if (isNaN(parseFloat(numAsString))) {\n        numAsString = '';\n      }\n\n      if (!allowLeadingZeros) {\n        numAsString = fixLeadingZero(numAsString);\n      }\n\n      var formattedValue = this.formatNumString(numAsString);\n\n      //change the state\n      if (formattedValue !== lastValue) {\n        // the event needs to be persisted because its properties can be accessed in an asynchronous way\n        this.updateValue({\n          formattedValue: formattedValue,\n          numAsString: numAsString,\n          input: e.target,\n          setCaretPosition: false,\n        });\n        onBlur(e);\n        return;\n      }\n    }\n    onBlur(e);\n  };\n\n  NumberFormat.prototype.onKeyDown = function onKeyDown (e                             ) {\n    var el = e.target;\n    var key = e.key;\n    var selectionStart = el.selectionStart;\n    var selectionEnd = el.selectionEnd;\n    var value = el.value; if ( value === void 0 ) value = '';\n    var expectedCaretPosition;\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var format = ref.format;\n    var onKeyDown = ref.onKeyDown;\n    var ignoreDecimalSeparator = decimalScale !== undefined && fixedDecimalScale;\n    var numRegex = this.getNumberRegex(false, ignoreDecimalSeparator);\n    var negativeRegex = new RegExp('-');\n    var isPatternFormat = typeof format === 'string';\n\n    this.selectionBeforeInput = {\n      selectionStart: selectionStart,\n      selectionEnd: selectionEnd,\n    };\n\n    //Handle backspace and delete against non numerical/decimal characters or arrow keys\n    if (key === 'ArrowLeft' || key === 'Backspace') {\n      expectedCaretPosition = selectionStart - 1;\n    } else if (key === 'ArrowRight') {\n      expectedCaretPosition = selectionStart + 1;\n    } else if (key === 'Delete') {\n      expectedCaretPosition = selectionStart;\n    }\n\n    //if expectedCaretPosition is not set it means we don't want to Handle keyDown\n    //also if multiple characters are selected don't handle\n    if (expectedCaretPosition === undefined || selectionStart !== selectionEnd) {\n      onKeyDown(e);\n      return;\n    }\n\n    var newCaretPosition = expectedCaretPosition;\n    var leftBound = isPatternFormat ? format.indexOf('#') : prefix.length;\n    var rightBound = isPatternFormat ? format.lastIndexOf('#') + 1 : value.length - suffix.length;\n\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      var direction = key === 'ArrowLeft' ? 'left' : 'right';\n      newCaretPosition = this.correctCaretPosition(value, expectedCaretPosition, direction);\n    } else if (\n      key === 'Delete' &&\n      !numRegex.test(value[expectedCaretPosition]) &&\n      !negativeRegex.test(value[expectedCaretPosition])\n    ) {\n      while (!numRegex.test(value[newCaretPosition]) && newCaretPosition < rightBound) {\n        newCaretPosition++;\n      }\n    } else if (key === 'Backspace' && !numRegex.test(value[expectedCaretPosition])) {\n      /* NOTE: This is special case when backspace is pressed on a\n      negative value while the cursor position is after prefix. We can't handle it on onChange because\n      we will not have any information of keyPress\n      */\n      if (selectionStart <= leftBound + 1 && value[0] === '-' && typeof format === 'undefined') {\n        var newValue = value.substring(1);\n        this.updateValue({\n          formattedValue: newValue,\n          caretPos: newCaretPosition,\n          input: el,\n        });\n      } else if (!negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition - 1]) && newCaretPosition > leftBound) {\n          newCaretPosition--;\n        }\n        newCaretPosition = this.correctCaretPosition(value, newCaretPosition, 'left');\n      }\n    }\n\n    if (\n      newCaretPosition !== expectedCaretPosition ||\n      expectedCaretPosition < leftBound ||\n      expectedCaretPosition > rightBound\n    ) {\n      e.preventDefault();\n      this.setPatchedCaretPosition(el, newCaretPosition, value);\n    }\n\n    /* NOTE: this is just required for unit test as we need to get the newCaretPosition,\n            Remove this when you find different solution */\n    if (e.isUnitTestRun) {\n      this.setPatchedCaretPosition(el, newCaretPosition, value);\n    }\n\n    onKeyDown(e);\n  };\n\n  /** required to handle the caret position when click anywhere within the input **/\n  NumberFormat.prototype.onMouseUp = function onMouseUp (e                          ) {\n    var el = e.target;\n\n    /**\n     * NOTE: we have to give default value for value as in case when custom input is provided\n     * value can come as undefined when nothing is provided on value prop.\n     */\n    var selectionStart = el.selectionStart;\n    var selectionEnd = el.selectionEnd;\n    var value = el.value; if ( value === void 0 ) value = '';\n\n    if (selectionStart === selectionEnd) {\n      var caretPosition = this.correctCaretPosition(value, selectionStart);\n      if (caretPosition !== selectionStart) {\n        this.setPatchedCaretPosition(el, caretPosition, value);\n      }\n    }\n\n    this.props.onMouseUp(e);\n  };\n\n  NumberFormat.prototype.onFocus = function onFocus (e                     ) {\n    var this$1 = this;\n\n    // Workaround Chrome and Safari bug https://bugs.chromium.org/p/chromium/issues/detail?id=779328\n    // (onFocus event target selectionStart is always 0 before setTimeout)\n    e.persist();\n\n    this.focusedElm = e.target;\n    this.focusTimeout = setTimeout(function () {\n      var el = e.target;\n      var selectionStart = el.selectionStart;\n      var selectionEnd = el.selectionEnd;\n      var value = el.value; if ( value === void 0 ) value = '';\n\n      var caretPosition = this$1.correctCaretPosition(value, selectionStart);\n\n      //setPatchedCaretPosition only when everything is not selected on focus (while tabbing into the field)\n      if (\n        caretPosition !== selectionStart &&\n        !(selectionStart === 0 && selectionEnd === value.length)\n      ) {\n        this$1.setPatchedCaretPosition(el, caretPosition, value);\n      }\n\n      this$1.props.onFocus(e);\n    }, 0);\n  };\n\n  NumberFormat.prototype.render = function render () {\n    var ref = this.props;\n    var type = ref.type;\n    var displayType = ref.displayType;\n    var customInput = ref.customInput;\n    var renderText = ref.renderText;\n    var getInputRef = ref.getInputRef;\n    var format = ref.format;\n    var thousandSeparator = ref.thousandSeparator;\n    var decimalSeparator = ref.decimalSeparator;\n    var allowedDecimalSeparators = ref.allowedDecimalSeparators;\n    var thousandsGroupStyle = ref.thousandsGroupStyle;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var removeFormatting = ref.removeFormatting;\n    var mask = ref.mask;\n    var defaultValue = ref.defaultValue;\n    var isNumericString = ref.isNumericString;\n    var allowNegative = ref.allowNegative;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var allowLeadingZeros = ref.allowLeadingZeros;\n    var onValueChange = ref.onValueChange;\n    var isAllowed = ref.isAllowed;\n    var customNumerals = ref.customNumerals;\n    var onChange = ref.onChange;\n    var onKeyDown = ref.onKeyDown;\n    var onMouseUp = ref.onMouseUp;\n    var onFocus = ref.onFocus;\n    var onBlur = ref.onBlur;\n    var propValue = ref.value;\n    var rest = objectWithoutProperties( ref, [\"type\", \"displayType\", \"customInput\", \"renderText\", \"getInputRef\", \"format\", \"thousandSeparator\", \"decimalSeparator\", \"allowedDecimalSeparators\", \"thousandsGroupStyle\", \"decimalScale\", \"fixedDecimalScale\", \"prefix\", \"suffix\", \"removeFormatting\", \"mask\", \"defaultValue\", \"isNumericString\", \"allowNegative\", \"allowEmptyFormatting\", \"allowLeadingZeros\", \"onValueChange\", \"isAllowed\", \"customNumerals\", \"onChange\", \"onKeyDown\", \"onMouseUp\", \"onFocus\", \"onBlur\", \"value\"] );\n    var otherProps = rest;\n    var ref$1 = this.state;\n    var value = ref$1.value;\n    var mounted = ref$1.mounted;\n\n    // add input mode on element based on format prop and device once the component is mounted\n    var inputMode = mounted && addInputMode(format) ? 'numeric' : undefined;\n\n    var inputProps = Object.assign({ inputMode: inputMode }, otherProps, {\n      type: type,\n      value: value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      onMouseUp: this.onMouseUp,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n    });\n\n    if (displayType === 'text') {\n      return renderText ? (\n        renderText(value, otherProps) || null\n      ) : (\n        React.createElement( 'span', Object.assign({}, otherProps, { ref: getInputRef }),\n          value\n        )\n      );\n    } else if (customInput) {\n      var CustomInput = customInput;\n      return React.createElement( CustomInput, Object.assign({}, inputProps, { ref: getInputRef }));\n    }\n\n    return React.createElement( 'input', Object.assign({}, inputProps, { ref: getInputRef }));\n  };\n\n  return NumberFormat;\n}(React.Component));\n\nNumberFormat.defaultProps = defaultProps;\n\nexport default NumberFormat;\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.dark = createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"],"sourceRoot":""}